// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Api.Models;

namespace Api.Data
{
    public partial class QlreportContext : DbContext
    {
        public QlreportContext()
        {
        }

        public QlreportContext(DbContextOptions<QlreportContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<AccountGroup> AccountGroups { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<Mark> Marks { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Submit> Submits { get; set; }
        public virtual DbSet<TeacherEvaluation> TeacherEvaluations { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Account>(entity =>
            {
                entity.HasOne(d => d.Role)
                    .WithMany(p => p.Accounts)
                    .HasForeignKey(d => d.RoleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Account_Role");
            });

            modelBuilder.Entity<AccountGroup>(entity =>
            {
                entity.HasOne(d => d.Account)
                    .WithMany(p => p.AccountGroups)
                    .HasForeignKey(d => d.AccountId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Account_Group_Account");

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.AccountGroups)
                    .HasForeignKey(d => d.GroupId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Account_Group_Group");
            });

            modelBuilder.Entity<Group>(entity =>
            {
                entity.HasOne(d => d.Project)
                    .WithMany(p => p.Groups)
                    .HasForeignKey(d => d.ProjectId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Group_Project");
            });

            modelBuilder.Entity<Mark>(entity =>
            {
                entity.Property(e => e.Report1).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.Account)
                    .WithMany(p => p.Marks)
                    .HasForeignKey(d => d.AccountId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Mark_Account1");
            });

            modelBuilder.Entity<Submit>(entity =>
            {
                entity.HasOne(d => d.Group)
                    .WithMany(p => p.Submits)
                    .HasForeignKey(d => d.GroupId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Submit_Group");

                entity.HasOne(d => d.Report)
                    .WithMany(p => p.Submits)
                    .HasForeignKey(d => d.ReportId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Submit_Report");
            });

            modelBuilder.Entity<TeacherEvaluation>(entity =>
            {
                entity.HasOne(d => d.Submit)
                    .WithMany(p => p.TeacherEvaluations)
                    .HasForeignKey(d => d.SubmitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TeacherEvaluation_Submit");

                entity.HasOne(d => d.Teacher)
                    .WithMany(p => p.TeacherEvaluations)
                    .HasForeignKey(d => d.TeacherId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TeacherEvaluation_Account");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}